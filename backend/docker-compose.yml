version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:6.0
    container_name: health-check-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-example}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-health_check_service}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/admin -u ${MONGO_USER:-root} -p ${MONGO_PASSWORD:-example} --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Health check service backend
  backend:
    build:
      context: .
      target: production
    container_name: health-check-backend
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      DATABASE_TYPE: mongodb
      MONGODB_URI: mongodb://${MONGO_USER:-root}:${MONGO_PASSWORD:-example}@mongodb:27017/${MONGO_DB:-health_check_service}?authSource=admin
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_SECURE: ${SMTP_SECURE:-false}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      EMAIL_FROM: ${EMAIL_FROM:-healthcheck@example.com}
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    volumes:
      - ./logs:/app/logs

volumes:
  mongodb_data: